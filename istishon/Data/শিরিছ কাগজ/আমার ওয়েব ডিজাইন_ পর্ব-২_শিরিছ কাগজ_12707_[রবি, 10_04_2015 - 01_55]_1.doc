আমার ওয়েব ডিজাইন_ পর্ব-২


প্রথম পর্বে Emmet থিমের মাধ্যমে কিভাবে দ্রুত কোড করা যায়, সে বিষয়ে দুইটা উদাহরণ দিয়েছিলাম। আজকের পর্বে আরো কিছু উদাহরণ দেবো এবং সিরিজের প্রাথমিক আলোচনা হিসেবে এডিটরের যে আলোচনা শুরু করেছিলাম, সেটা শেষ করবো। তো শুরু করা যাক সিরিজের দ্বিতীয় পর্ব।
উদাহরণ ৩: মনে করা যাক আপনি একটি class নিয়েছ wrapper নামে। এই class –টি আপনি মোট ১০/২০ বার নিয়েছেন। এখন আপনি চাচ্ছেন সেগুলোর নাম পরিবর্ত করে wrapper –এর জাগায় full-wrapper লিখবেন। সেক্ষেত্রে Replace –এর অপশন তো আছেই। কিন্তু Emmet –এর মধ্যে আরেকটা অপশন আছে, যেটা দিয়ে আপনি একই ধরণের শব্দগুলো সিলেক্ট করতে পারবেন, মানে শুধু সেই নির্দিষ্ট শব্দগুলোই সিলেক্ট হবে সেগুলো পেজের যেখানেই থাকুক না কেন। এ অপশনটি ব্যবহার করতে প্রথমে আপনি আপনার সেই নির্দিষ্ট শব্দটি সিলেক্ট করুন। তারপর কন্ট্রোল+বি (Ctrl+B) চাপুন, দেখবেন আপনি যে শব্দটি সিলেক্ট করেছেন, এই শব্দটি এই পরবর্তীতে এই পেজের যেখানে আছে, সেখানেও সিলেক্ট হয়ে যাবে। আবার কন্ট্রোল+বি (Ctrl+B) চাপুন, একই শব্দ পরবর্তীতে যেখানে আছে, সেখানে সিলেক্ট হয়ে যাবে। এভাবে আপনি যতবার চাপবেন, সেই নির্দিষ্ট শব্দটি পেজের যেখানে যেখানে আছে, একে একে সিলেক্ট হতে থাকবে। যদি শব্দ শেষ হয়ে যায়, তাহলে সিলেক্ট হওয়া বন্ধ হয়ে যাবে।
মনে করুন wrapper নামের class –টি পেজের ২০ জাগায় নেয়া হয়েছে। এখন আপনি সবগুলো পরিবর্তন করতে চাচ্ছেন না, বরং ১১-২০ পর্যন্ত পরিবর্তন করতে চাচ্ছেন। তাহলে এখন ১১ নং wrapper class –টি সিলেক্ট করুন। তারপর ৯ বার কন্ট্রোল+বি (Ctrl+B) চাপুন, আপনার কাঙ্ক্ষিত wrapper class-গুলো সিলেক্ট হয়ে গেল। এবার আপনি যে শব্দ দিয়ে এই class টির নাম রিপ্লেস করতে চান, সেটা জাস্ট টাইপ করুন। রিপ্লেস হয়ে গেল। Emmet থিমটি ব্যবহার করে কন্ট্রোল+বি (Ctrl+B) –এর মাধ্যমে ব্রাকেটসে আরও অনেক কাজই আপনি করতে পারবেন, ব্যবহার করতে করতে সেগুলো বোঝা যাবে।
উদাহরণ ৪: আমরা যারা ওয়েব ডিজাইনের কাজ করে, তাদের জন্য সাধারণত বেশ কিছু ডামি টেক্সটের প্রয়োজন হয়। আমরা সাধারণত দুইভাবে এই কাজটা করি। এক. অনলাইনের কোন একটা পেজের প্যারাগ্রাফ কপিপেস্ট করি, দুই. আমরা নিজে থেকে কিছু টেক্সট লিখে সেটাকে বারবার কপিপেস্ট করি।
Emmet থিমটাতে এর জন্য খুবই সুন্দর একটা সমাধান দেয়া আছে, যার কারণে আপনাকে উপরের দুইটা বিরক্তিকর মাধ্যমের একটাও দরকার হবে না। আপনি জাস্ট এই শব্দটি লিখুন- lorem তারপর কোন স্পেস না দিয়ে সংখ্যা লিখুন যে, কত শব্দের প্যারাগ্রাফ আপনি চান, তারপর কী-বোর্ডের ট্যাব (Tab) বাটন চাপুন। দেখবেন, যে সংখ্যা লিখেছেন, ঠিক তত সংখ্যার শব্দের একটি প্যারাগ্রাফ লেখা হয়ে গেছে। lorem1000 লিখে Tab বাটন চাপুন, এক হাজার শব্দের একটি প্যারাগ্রাফ হয়ে যাবে মুহূর্তেই।
paragraph নামের class নিয়ে তার ভেতরে
 ট্যাগ এবং একশ শব্দের একটি প্যারাগ্রাফ- এর জন্য Emmet থিমটি ব্যবহার করে ব্রাকেটসে যে কোডটুকু করতে হবে, সেটা হলো-.paragraph>p>lorem100

এইটুকু কোড লিখে Tab চাপুন, কাহিনী শেষ।
উদাহরণ ৫: মনে করা যাক আপনি একটি অন-অর্ডা’র লিস্ট ট্যাগ (ul) –এর মধ্যে পাঁচটি লিস্ট আইটেম ট্যাগ (li) নিয়েছেন। তোর এর মধ্যে তিন নাম্বার li –টিকে আপনি নিতে চাচ্ছে পাঁচ নাম্বারে আর পাঁচ নাম্বারটিকে আনতে চাচ্ছেন তিন নাম্বারে। সাধারণত আমরা এর জন্য কাট করে পেস্ট করবো। কিন্তু Emmet –এর মধ্যে যে কোন লাইনকে উপনে অথবা নিচে নেয়ার জন্য একটা সুবিধা রয়েছে। যে লাইনটিকে আপনে নিচে অথবা উপরে নিতে চাচ্ছেন, প্রথমে সে লাইনে আপনি ক্লিক করুন। অর্থাৎ mouse-cursors-text এর যে আইকন রয়েছে, সেটা আপনার ঐ লাইনে থাকতে হবে, যে লাইনটি আপনি উপরে অথবা নিচে নিতে চাচ্ছেন।
এরপর কন্ট্রোল (Ctrl) এবং শিফট (Shift) বাটন চেপে ধরুন। এখন আপনি যদি লাইনটি নিচের দিকে নিতে চান, তাহলে কী-বোর্ডের Down Arrow ↓ বাটন চাপুন। আর যদি উপরে নিতে চান তাইলে বিড়ির দাম কমানোর জন্য আন্দোলন শুরু করেন… আর ভাল্লাগে না।
ও হ্যা.. একবার চাপলে এক লাইন করে নিচে অথবা উপরে যাবে। আপনার যত লাইন দরকার ততবার চাপতে হবে।

প্রথম পর্ব থেকে এ পর্যন্ত ব্রাকেটসের ইমেট থিমের মোট পাঁচটা উদাহরণ দিলাম। ৩ এবং পাঁচ নং উদাহরণ ছাড়া বাকিগুলো শুধু .html পেজের ক্ষেত্রে প্রজোয্য, তবে চার নং উদাহরণটি .css ফাইলেও কাজ করবে। তবে এ পর্যন্ত যে উদাহরণগুলো দিয়েছি, সেগুলো .html ফাইলের কথা মাথায় রেখে দিয়েছি। এখন শুরু করবো .css ফাইলে কি কি সুবিধা রয়েছে সেগুলোর কথা। এতক্ষণ পর্যন্ত .html ফাইলের যে সুবিধাগুলোর কথা বললাম, সেগুলো ছাড়াও .html ফাইলের আরো অনেক সুবিধা আছে, যেগুলো ব্যবহার করতে করতে বোঝা যাবে।
Auto Prefix Theme -এর আলোচনা

.css ফাইলের উদাহরণ শুরু করি আমাদের তৃতীয় থিমটি দিয়ে, যেটার নাম হচ্ছে অটো-প্রিফিক্স (AutoPrefix)। css –এর আপডেট ভার্সন হচ্ছে css3, এর আগের ভার্সনটি হলো css2 । css –এর আপডেট ভার্সনের কিছু প্রোপার্টি আছে, যেগুলো সব ব্রাউজারে সাপোর্ট করে না। তো css –এর যে প্রোপার্টিগুলো ব্রাউজার সাপোর্টে প্রোবলেম করে, সেই প্রোপার্টিগুলো প্রতিটি ব্রাউজারের জন্য আলাদা আলাদ লিখতে হয়, মূল প্রোপার্টিটি থাকবে সবার নিচে, আর ব্রাউজার সাপোর্টের জন্য যে রিপিটগুলো আছে, সেগুলো থাকবে মূল প্রোপার্টির উপরে, একটা উদাহরণ দেই, তাহলেই পরিষ্কার হবে আশা করি।
Css3 এর যে কোন একটি প্রোপার্টি নেই, যেমন….. transform, এই প্রোপার্টির ভ্যালু দিলাম মনে করুন- rotate(45deg);
মূল রূপ- transform: rotate(45deg);
এখন যেহেতু এই transform প্রোপার্টিটি সব ব্রাউজারে সাপোর্ট করে না, এ জন্য এই প্রোপার্টির সাথে ব্রাউজার সাপোর্টের জন্য কিছু কোড লিখতে হবে, এগুলোকে ক্রস ব্রাউজার কোড (cross browser code) বলে। মানে উপরে যেটা বলেছিলাম আর কি, একই কোড, শুধু রিপিট হবে। মূল প্রোপার্টি থাকবে সবার নিচে আর রিপিটেড কোড বা ক্রস ব্রাউজার কোডগুলো থাকবে এর ঠিক উপরে, মূল প্রোপার্টি আর এর ক্রস ব্রাউজার কোডের মাঝখানে অন্য কোন কোড থাকতে পারবে না। নিচের উদাহরণটি দেখুন।
মূল রূপ- transform: rotate(45deg);
এটা হলো মূল রূপ, কিন্তু যেহেতু এর ক্রস ব্রাউজার কোড লাগবে, এ জন্য css ফাইলে লিখতে হবে এভাবে-

-webkit-transform: rotate(angle);-moz-transform: rotate(angle);-ms-transform: rotate(angle);-o-transform: rotate(angle);
transform: rotate(angle);


দেখুন, মূলরূপটি রিপিট করা প্রতিটি লাইনেই আছে, সাথে শুধু ব্রাউজার সাপোর্টের জন্য বিভিন্ন ক্রস ব্রাউজার কোড-
-webkit- গুগল বেজ্ড সব ব্রাউজারের জন্য, যেমন Chrome, Torch, Safari ইত্যাদির জন্য।
-moz- ফায়ারফক্স এর জন্য।
-ms- ইন্টারনেট এক্সপ্লোরার –এর জন্য।
-o- অপেরা ব্রাউজারের জন্য।
css3 কোন্ প্রোপার্টির জন্য কখন কি কি ক্রস ব্রাউজার কোড লাগে, সেই আলোচনা বিইইইইইশাআআআআআল। সেইদিকে যাওয়ার তো পুশ্চেনই উঠে না। আমি যেটা বলতে চাইতেছি, সেটা হইল, এই যে একই কোড রিপিট করা শুধু ব্রাউজার সাপোর্টের জন্য, এইটা বিরাআআআট এক বিরক্তিকর কাজ। আর এই বিরক্তি থেকে চিরমুক্তি দেয়ার জন্য বাজারে আসলো অটো-প্রিফিক্স (AutoPrefix) থিম। এই থিম ব্যবহার করলে আপনাকে ক্রস ব্রাউজার কোড লেখতে হবে না, লেখতে হবে না মানে লেখতে হবে না, একটুও না। শুধু মূল কোড লিখবেন আর তারপর সেভ করবেন, সেভ করার সাথে সাথে ক্রস ব্রাউজার কোড চলে আসবে যেখানে যেখানে দরকার।
অথবা আপনি যদি চান যে, css এর সব কোড করার পর সবার শেষে একসাথে সবগুলো ক্রস ব্রাউজার কোড এড করবেন, সেটাও সম্ভব।
প্রথমে অটো-প্রিফিক্স (AutoPrefix) থিমটি ইন্সস্টল করুন ব্রাকেটসে। তারপর ব্রাকেটসের যে মেন্যু আছে, সেখানে Edit নামের অপশনটিতে ক্লিক করুন। বিরাট এক লিস্ট আসবে, সেটার নিচের দিকে দেখুন অটো-প্রিফিক্স (AutoPrefix) –এর জন্য তিনটা অপশন আছে। তিন নাম্বার অপশনে হাত দেয়া দরকার নাই। প্রথম দুইটা নিয়াই আমাদের কাজ-১ম অপশন- Auto Prefix on save - আপনি যদি চান যে, সেভ করার সাথে সাথে .css ফাইলের যেখানে যেখানে ক্রস ব্রাউজার কোড দরকার, সেসব জাগায় ক্রস ব্রাউজার কোড বসে যাবে, তাহলে আপনি এই অপশনটিতে ক্লিক করে টিক চিহ্ন দিয়ে রাখুন। আর যদি এটা না চান, তাহলে কিছু করার দরকার নাই। যদি এই অপশনে আগে থেকেই টিক চিহ্ন দেয়া থাকে, তাহলে তুলে দেন।২য় অপশন- Auto Prefix on selection –আপনি সেভ করার সাথে সাথে ক্রস ব্রাউজার কোড চান না, বরং কাজ শেষ করে অথবা কাজের মাঝখানে যে কোন সময় .css ফাইলের নিদিষ্ট কিছু অংশে ক্রস ব্রাউজার কোড চান, তাহলে যে অংশটুকুর মধ্যে ক্রস ব্রাউজার কোড চান, সেটুকু সিলেক্ট করুন। তারপর Edit –এ গিয়ে আমাদের এই দ্বিতীয় অপশনে ক্লিক করুন, দেখবেন আপনার সিলেক্টেড অংশটুকুতে যদি ক্রসব্রাউজার কোড দরকার হয়, চলে আসবে। আর যদি অল সিলেক্ট দিয়ে দ্বিতীয় এই অপশনটিতে ক্লিক করেন, তাহলে পুরো .css ফাইলে ক্রস ব্রাউজার কোড চলে আসবে।
অটো-প্রিফিক্স (AutoPrefix) থিমের কাহিনী এখানেই শেষ। এবার .css ফাইলে ইমেট Emmet এর কিছু মহান সুবিধা বর্ণনা করা যাক। 
Emmet in .css ফাইল

প্রথমেই বলে দিছি যে, ইমেটের কাজই হইল দ্রুত কোড করা। তো .css এর মধ্যেও এর ব্যতিক্রম হবে না। কিন্তু সমস্যা হইলো, .css ফাইলে ইমেটের সুবিধা বইলা শেষ করা যাবে না। তবে একটা কথা, .css এর মধ্যে যে সিলেক্টরগুলো আছে, সেগুলোর ব্যাপারে ইমেটের কোন কাজ নাই। সেগুলা সাধারণভাবেই নিতে হবে।
মনে করা যাক আমি আমার .css ফাইলের কোথাও border: 0; দিতে চাই। তো ইমেট থিমটা ইন্সস্টল করা থাকলে শুধু b0 লিখে কী-বোর্ডের Tab বাটন চাপলেই হবে। border: 0; চলে আসবে। এ রকম আরও অনেক অনেক আছে, যেগুলা আপনি ব্যবহার করতে করতে বুঝতে পারবেন। এখানে অল্প কিছু দেয়া হইল, এই পর্বটা এমনিতেই বেশি বড় হইতেছে-

 Demo for Emmet in css 


css Property & Value


Emmet Code

 margin: 0px;
m0+Tab
 padding: 0px;
p0+Tab 
 border: 0;
b0+Tab 
 outline: 0;
o0+Tab
 box-sizing: border-box;
bx+Tab
 text-decoration: none;
tdn+Tab
 list-style-type: none;
lstn+Tab
 text-align: center;
tac+Tab
 text-align: right;
tar+Tab
 text-align: justify;
taj+Tab

আরও অনেএএএএএএক আছে, বলতে গেলে বিরাট জাগা খায়া ফেলবে, ব্যবহার করেন, করতে করতে জানতে পারবেন, বোঝেনই তো, করতে হলে জানতে হবে :চোখমারা: 
Beautify Theme -এর আলোচনা

এখন বলি দ্বিতীয় থিমের কথা, অর্থাৎ বিউটিফাই (Beautify)। এইটার কাজ হইল কোডস্ট্রাকচার ঠিক করে দেয়া। আপনে যদি চান যে, সেভ করার সাথে সাথে পেজের সব কোড একসাথে স্ট্যান্ডার্ডড স্ট্রাকচারে চলে আসবে, তাহলে থিমটা ইন্সস্টল করার পর একইভাবে ব্রাকেটসের মেইন মেন্যুর Edit অপশনে ক্লিক করুন। দেখবেন নিচের দিকে বিউটিফাই –এর জন্য দুইটা অপশন আছে-১- Beautify –পেজের যে কোন অংশের কিছু কোড সিলেক্ট করে Edit –এ গিয়ে এই অপশনে ক্লিক করলে সিলেক্ট করা কোডগুলো সঠিক স্ট্রাকচারে চলে আসবে। এর জন্য একটা হট কী-ও আছে- কন্ট্রোল+শিফট+এল (Ctrl+shift+L)।২- Beautify on save –যদি আপনি চান যে সেভ করার সাথে সাথে পেজের সব কোড সঠিক স্ট্রাকচারে চলে আসবে, তাহলে এই অপশনে ক্লিক করে টিক চিহ্ন দিয়ে রাখুন, আর যদি এটা না চান, তাহলে এটাতে ক্লিক করার দরকার নাই, বরং যদি দেখেন যে টিক দেয়া আছে, সেটা তুলে দেন।
কোডের পরিমাণ যতই হোক না কেন, কোড যতই এলোমেলো হোক না কেন, সিলেক্ট করুন এবং Ctrl+shift+L চাপুন, সব ঠিকঠাক হয়ে যাবে মুহূর্তেই। সাধারণত সব প্লাগিন এবং কী-ফ্রেমের ফাইলগুলো কমপ্রেস্ড বা স্পেসবিহীন থাকে, স্পেসবিহীন বা কমপ্রেস্ড মানে হলো, ফাইলের কোডগুলোর মাঝখানে কোন ফাকা নাই, একটা স্পেসও নাই, নাই মানে নাই-ঐ। এই কাজটা করা হয় সাধারণত দুইটা কারণে- এক. সিকিউরিটি, দুই. সাইজ কমানো। font-awesome-4.4.0 –এর .css ফাইলের সাইজ হইলো ৩২ কিলোবাইট আর একই ফাইলের কমপ্রেস্ড ভার্সনের সাইজ হইলো ২৭ কিলোবাইট। সাধারণত সবাই কমপ্রেস্ড ফাইলই ইন্সস্টল করে। কিন্তু মনে করেন যে আপনি ফন্ট অসামের css দেখতে চান, বুঝতে চান, তখন কিন্তু কমপ্রেস্ড ফাইল দিয়ে কিছুই করতে পারবেন না। তবে যদি বিউটিফাই থাকে, তাহলে অল সিলেক্ট দিয়ে Ctrl+shift+L চাপলেই কমপ্রেস্ড করা পুরা ফাইলটা নর্মাল হয়ে গেল। সেভ না করে আপনি আপনার কাজ শেষ করুন, কাজ শেষ ক্লোজ করে দিন, সেভ করতে চান কি না সেই অপশন আসলে Don’t save এ ক্লিক করুন। অথবা Ctrl+Z চেপে ফাইলটি আগের অবস্থায় নিয়ে ক্লোজ করে দেন। কাহিনী শেষ।
যখন আপনি কোড করবেন, তখন অবশ্যই সতর্কতার সাথে সুন্দরভাবে কোড করবেন। কিন্তু বড় বড় প্রোজেক্টগুলো করতে গেলে সতর্ক থাকার পরও অনেক সময় কোড স্ট্রাকচার ভুল হয়ে যায়। তখন এই বিউটিফাই বিরাট কাজে লাগে। আর বিউটিফাই .html, .css, .js সব ফাইলেই কাজ করে।
আজকের পর্ব এবং সিরিজের প্রাথমিক আলোচনা এখানেই শেষ। আগামী পর্ব থেকে শুরু হবে ম্যাজিক। ম্যাজিকের অপেক্ষায় থাকেন, ভাল থাকেন।

ওয়েব ডিজাইন করি
জীবন গড়ি

